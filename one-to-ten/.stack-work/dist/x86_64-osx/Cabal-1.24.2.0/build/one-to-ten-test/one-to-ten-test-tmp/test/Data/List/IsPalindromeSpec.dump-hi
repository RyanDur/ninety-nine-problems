
==================== FINAL INTERFACE ====================
2017-10-02 02:06:46.536569 UTC

interface main@main:Data.List.IsPalindromeSpec 8002
  interface hash: bedb580909091d28765030298ab1b613
  ABI hash: 9bb7d78ac662de1d2a98e814638660d5
  export-list hash: c4c24ad61f92e3498cf0ad0058278a7f
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 9fa012e1ad53d80f38764ac59c90cac1
  sig of: Nothing
  used TH splices: False
  where
exports:
  Data.List.IsPalindromeSpec.main
  Data.List.IsPalindromeSpec.spec
module dependencies:
package dependencies: HUnit-1.5.0.0@HUnit-1.5.0.0-DvjF79OHhCC7SzfeEty4OI
                      QuickCheck-2.9.2@QuickCheck-2.9.2-LvlomhGMxrFBkX1zwiWpQu
                      ansi-terminal-0.6.3.1@ansi-terminal-0.6.3.1-3RTqikoQf47ajVD9m8zgB
                      array-0.5.1.1@array-0.5.1.1
                      async-2.1.1.1@async-2.1.1.1-8yywY4inVGRLJSCg60gBXj base-4.9.1.0
                      call-stack-0.1.0@call-stack-0.1.0-FYVrCPXGP9EGAuTW32963O
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 directory-1.3.0.0@directory-1.3.0.0
                      filepath-1.4.1.1@filepath-1.4.1.1
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      hspec-2.4.4@hspec-2.4.4-Ct0Af2AzisB8bPqGMHHFvj
                      hspec-core-2.4.4@hspec-core-2.4.4-Ezb0jq4rRfBJWZtpolvs1E
                      hspec-expectations-0.8.2@hspec-expectations-0.8.2-DujBeQFEMmfJJRLad7XQgd
                      integer-gmp-1.0.0.1
                      one-to-ten-0.1.0.0@one-to-ten-0.1.0.0-GMW0cwlHCIMF7v8w30g4Rz
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh
                      quickcheck-io-0.2.0@quickcheck-io-0.2.0-4pLO1WRxoBW9gt8EnME0zS
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      setenv-0.1.1.3@setenv-0.1.1.3-8dEhk6JWvlmCmVyBammSpu
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
                      template-haskell-2.11.1.0
                      tf-random-0.5@tf-random-0.5-CJZw1ZWS5MOJlR60HqKEZL
                      time-1.6.0.1@time-1.6.0.1 transformers-0.5.2.0@transformers-0.5.2.0
                      unix-2.7.2.1@unix-2.7.2.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         quickcheck-io-0.2.0@quickcheck-io-0.2.0-4pLO1WRxoBW9gt8EnME0zS:Test.QuickCheck.IO
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         hspec-core-2.4.4@hspec-core-2.4.4-Ezb0jq4rRfBJWZtpolvs1E:Test.Hspec.Core.Example
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Control.Monad.Primitive
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
import  -/  QuickCheck-2.9.2@QuickCheck-2.9.2-LvlomhGMxrFBkX1zwiWpQu:Test.QuickCheck 7a1791e2e66f06ce3b95a443f0d4b1ed
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  hspec-2.4.4@hspec-2.4.4-Ct0Af2AzisB8bPqGMHHFvj:Test.Hspec 04ea8eba4a0731a497f82df2f1be76d5
import  -/  hspec-core-2.4.4@hspec-core-2.4.4-Ezb0jq4rRfBJWZtpolvs1E:Test.Hspec.Core.Runner c79a89c5a9ba4275f04053dfa6118e70
import  -/  hspec-core-2.4.4@hspec-core-2.4.4-Ezb0jq4rRfBJWZtpolvs1E:Test.Hspec.Core.Spec 4de3fc7b2286a4370366c92ba3ff97ab
import  -/  hspec-core-2.4.4@hspec-core-2.4.4-Ezb0jq4rRfBJWZtpolvs1E:Test.Hspec.Core.Spec.Monad 36dacd035c3a2115d6655a60a7bcad9c
import  -/  hspec-expectations-0.8.2@hspec-expectations-0.8.2-DujBeQFEMmfJJRLad7XQgd:Test.Hspec.Expectations 29d4e6711b7d6d8a68fed679467f46e6
import  -/  one-to-ten-0.1.0.0@one-to-ten-0.1.0.0-GMW0cwlHCIMF7v8w30g4Rz:Data.List.IsPalindrome 76a861a67bfb8f512bfe39f9b7c5804e
90b0b6d1fb8022a7a3b2de4691a2de3a
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Data.List.IsPalindromeSpec.$trModule2
                   Data.List.IsPalindromeSpec.$trModule1) -}
3c111bdc1081e5da74b206d23f17f502
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Data.List.IsPalindromeSpec"#) -}
9f705e6b9b063d3e7627327cdf266f05
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
f778d2ccb576a9f784dad57989a616f3
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Data.List.IsPalindromeSpec.main1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <()>_R)) -}
2102aae0e56194f7c416a1395006bf99
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 case Test.Hspec.Core.Runner.hspec2
                        Test.Hspec.Core.Options.defaultConfig
                        Data.List.IsPalindromeSpec.main2
                          `cast`
                        (Trans
                             (Sym (GHC.Types.N:IO[0]
                                       <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                             (Trans
                                  (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                            <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                            <GHC.Types.IO>_R
                                            <()>_N))
                                  (Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0] <()>_N) <()>_N)))
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { Test.Hspec.Core.Runner.Summary ds ds2 ->
                 case ds2 of wild1 { GHC.Types.I# x ->
                 case x of wild2 {
                   DEFAULT -> System.Exit.die2 @ () ipv
                   0# -> (# ipv, GHC.Tuple.() #) } } } }) -}
e906fd1943d7741be6a3552581718297
  main10 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Data.List.IsPalindromeSpec.main38
                   Data.List.IsPalindromeSpec.main27
                   GHC.Types.False
                   Data.List.IsPalindromeSpec.main11
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
045a57cfa59b403a1a1371253d95d7b2
  main100 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Data.List.IsPalindromeSpec.main101) -}
60148f1a5db67595b7cf6941c929efba
  main101 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Data.List.IsPalindromeSpec.main37
                   Data.List.IsPalindromeSpec.main102
                   GHC.Stack.Types.EmptyCallStack) -}
21c49a21a89ceb8caf7de86be63e1c6c
  main102 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Data.List.IsPalindromeSpec.main25
                   Data.List.IsPalindromeSpec.main24
                   Data.List.IsPalindromeSpec.main23
                   Data.List.IsPalindromeSpec.main104
                   Data.List.IsPalindromeSpec.main35
                   Data.List.IsPalindromeSpec.main104
                   Data.List.IsPalindromeSpec.main103) -}
3531c6d27aa9b178f0a3c5270237b2bb
  main103 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 58#) -}
c1e054b70392f631ca61985acac6b4da
  main104 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 14#) -}
5fe5136282e4f7627384ac706c1b66bb
  main105 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Data.List.IsPalindromeSpec.main40
                   Data.List.IsPalindromeSpec.main106) -}
02d108988fa4ece74b1284fa51f985bf
  main106 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "hould know if a list of ints is not a palidrome"#) -}
ebb9b786323d99ee6a3119a5addb4104
  main107 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Data.List.IsPalindromeSpec.main109
                   Data.List.IsPalindromeSpec.main108) -}
8f534f01e35d642fd6445b3d24e67036
  main108 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "sPalindrome"#) -}
7a1b5a39d8de508b44c24558be7ee319
  main109 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'i'#) -}
64ab84bfd6979db975a7207c40b33e8b
  main11 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Trans
                                    (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                    (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Data.List.IsPalindromeSpec.main12) -}
e2eff532ccccc66869e2a697ecec7f15
  main12 :: Test.HUnit.Lang.Assertion
  {- Unfolding: (Data.List.IsPalindromeSpec.main15
                   (GHC.Types.[] @ GHC.Types.Char)
                   GHC.Types.True
                   Data.List.IsPalindromeSpec.main13) -}
e19942d33db00ae016ba739dd825426e
  main13 :: GHC.Types.Bool
  {- Unfolding: (Data.List.IsPalindrome.isPalindrome
                   @ GHC.Types.Char
                   GHC.Classes.$fEqChar
                   Data.List.IsPalindromeSpec.main14) -}
b9e7a46b6f3748d0355846818ffdd2fb
  main14 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "madamimadam"#) -}
8a7b449ad5061b9e1cf82e74b58d6549
  main15 ::
    GHC.Base.String
    -> GHC.Types.Bool -> GHC.Types.Bool -> Test.HUnit.Lang.Assertion
  {- Unfolding: (Test.HUnit.Lang.assertEqual
                   @ GHC.Types.Bool
                   Data.List.IsPalindromeSpec.main16
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   GHC.Classes.$fEqBool
                   GHC.Show.$fShowBool) -}
24de9a79df6c12778e59f363564fb7fa
  main16 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.@=?5
                   Test.HUnit.Base.@?=1
                   Data.List.IsPalindromeSpec.main17) -}
8e04863fc60943d9bd413d10eea871d4
  main17 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.shouldBe5
                   Test.Hspec.Expectations.shouldBe1
                   Data.List.IsPalindromeSpec.main18) -}
99c6a1d4d8c551b6efee6c0d2039be45
  main18 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Data.List.IsPalindromeSpec.main26
                   Data.List.IsPalindromeSpec.main19
                   GHC.Stack.Types.EmptyCallStack) -}
b5c106be5070abd38af4d9f12db37724
  main19 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Data.List.IsPalindromeSpec.main25
                   Data.List.IsPalindromeSpec.main24
                   Data.List.IsPalindromeSpec.main23
                   Data.List.IsPalindromeSpec.main22
                   Data.List.IsPalindromeSpec.main21
                   Data.List.IsPalindromeSpec.main22
                   Data.List.IsPalindromeSpec.main20) -}
4669e95c697c9dfab24a00193147fce4
  main2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           [Test.Hspec.Core.Tree.Tree
              (Test.Hspec.Core.Example.ActionWith ())
              (Test.Hspec.Core.Tree.Item ())]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 (# eta, Data.List.IsPalindromeSpec.main3 #)) -}
eedc6de2646f0ee43e796096aa4ec544
  main20 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 49#) -}
6083d7cc43dee33a6d5a449cb9dedbcf
  main21 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 7#) -}
52b78dc27154cdd712f9dec26f70ff9d
  main22 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 19#) -}
7c0f99f18d4200c60dc3ac9f111f13c6
  main23 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "test/Data/List/IsPalindromeSpec.hs"#) -}
f17df281e4da16e15d9d2ecc8ed21fba
  main24 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Data.List.IsPalindromeSpec"#) -}
2419d6dcad95a0bb35bd44c1c96216b5
  main25 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "main"#) -}
4bd6952a694b65269dff63d6a3477326
  main26 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "shouldBe"#) -}
7697a06d8fac47c4496ebe147d3fe3bd
  main27 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (case GHC.List.reverse1
                        @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)
                        Data.List.IsPalindromeSpec.main28
                        (GHC.Types.[]
                           @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)) of wild {
                   [] -> GHC.Base.Nothing @ Test.Hspec.Core.Example.Location
                   : ds ds1
                   -> case ds of wild2 { (,) ds2 loc ->
                      GHC.Base.Just
                        @ Test.Hspec.Core.Example.Location
                        (Test.Hspec.Core.Example.Location
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds3 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds6 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds7 })
                           Test.Hspec.Core.Example.ExactLocation) } }) -}
d6fd8064cd45344eaf358ae7aadbeab6
  main28 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (Data.CallStack.$wunsafeDrop
                   @ ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                   1#
                   Data.List.IsPalindromeSpec.main29) -}
c04f37accd28064df3a35059b765adf9
  main29 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (GHC.Stack.Types.getCallStack
                   Data.List.IsPalindromeSpec.main30) -}
d0fc035732f78f94c28776556169902a
  main3 ::
    ((),
     [Test.Hspec.Core.Tree.Tree
        (Test.Hspec.Core.Example.ActionWith ())
        (Test.Hspec.Core.Tree.Item ())])
  {- Unfolding: ((GHC.Tuple.(), Data.List.IsPalindromeSpec.main4)) -}
ba24ee7d6f51d645df1b757396e83155
  main30 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem9
                   Test.Hspec.Core.Tree.specItem2
                   Data.List.IsPalindromeSpec.main31) -}
8375b546fd05c7b4cdaa19210b08ce79
  main31 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Data.List.IsPalindromeSpec.main32) -}
efa93735858eaeafd14b6be3585f75d0
  main32 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Data.List.IsPalindromeSpec.main37
                   Data.List.IsPalindromeSpec.main33
                   GHC.Stack.Types.EmptyCallStack) -}
d7741e9262ca46543b22ac7fbce3a564
  main33 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Data.List.IsPalindromeSpec.main25
                   Data.List.IsPalindromeSpec.main24
                   Data.List.IsPalindromeSpec.main23
                   Data.List.IsPalindromeSpec.main36
                   Data.List.IsPalindromeSpec.main35
                   Data.List.IsPalindromeSpec.main36
                   Data.List.IsPalindromeSpec.main34) -}
016ffba7850d0233131ef0e1cb40a308
  main34 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 33#) -}
c13b80bd88e6e5f61e2b814a09b27f0e
  main35 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 5#) -}
5a7bbbda53e764fc7fad4fb99a0826a2
  main36 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 18#) -}
3a520f30929f8ddb236e1e3d59a51536
  main37 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "it"#) -}
b8170983e4c27477380ef0fc3392ab5e
  main38 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Data.List.IsPalindromeSpec.main40
                   Data.List.IsPalindromeSpec.main39) -}
c5fb8f61c7f5c37808e01555129e79a9
  main39 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "hould work for strings"#) -}
494b2850a76d088f38210c2966a6e6d9
  main4 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Data.List.IsPalindromeSpec.main5
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.Tree
                           (Test.Hspec.Core.Example.ActionWith ())
                           (Test.Hspec.Core.Tree.Item ())))) -}
8c56787f24ab1c58a745a95b65287d8b
  main40 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 's'#) -}
4e25aa1720c3141e376d42db0065bb1a
  main41 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Data.List.IsPalindromeSpec.main42
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
91d2c1b340f3b41b0ad93f1d154001c4
  main42 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Data.List.IsPalindromeSpec.main43) -}
a032107b745ded720315224d345a082d
  main43 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Data.List.IsPalindromeSpec.main77
                   Data.List.IsPalindromeSpec.main68
                   GHC.Types.False
                   Data.List.IsPalindromeSpec.main44
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
a307b1d1fd9c57fd37f11607ed93955f
  main44 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Trans
                                    (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                    (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Data.List.IsPalindromeSpec.main45) -}
3908cf0243257f46b077835e2be54bdf
  main45 :: Test.HUnit.Lang.Assertion
  {- Unfolding: (Data.List.IsPalindromeSpec.main61
                   (GHC.Types.[] @ GHC.Types.Char)
                   GHC.Types.True
                   Data.List.IsPalindromeSpec.main46) -}
24f993e3554d9e0db13a725d2949c01a
  main46 :: GHC.Types.Bool
  {- Unfolding: (Data.List.IsPalindrome.isPalindrome
                   @ GHC.Integer.Type.Integer
                   GHC.Integer.Type.$fEqInteger
                   Data.List.IsPalindromeSpec.main47) -}
acf334406f7c510d65813284a820fc9f
  main47 :: [GHC.Integer.Type.Integer]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Integer.Type.Integer
                   Data.List.IsPalindromeSpec.main56
                   Data.List.IsPalindromeSpec.main48) -}
08fbec4f4ddf8503fbffa2803be003d3
  main48 :: [GHC.Integer.Type.Integer]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Integer.Type.Integer
                   Data.List.IsPalindromeSpec.main57
                   Data.List.IsPalindromeSpec.main49) -}
7f0bae8043ef84cb36fb8e3485dd57bf
  main49 :: [GHC.Integer.Type.Integer]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Integer.Type.Integer
                   Data.List.IsPalindromeSpec.main58
                   Data.List.IsPalindromeSpec.main50) -}
da7a39018c61084c68714b469826a9cd
  main5 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith ())
      (Test.Hspec.Core.Tree.Item ())
  {- Unfolding: (Test.Hspec.Core.Tree.Node
                   @ (Test.Hspec.Core.Example.ActionWith ())
                   @ (Test.Hspec.Core.Tree.Item ())
                   Data.List.IsPalindromeSpec.main107
                   Data.List.IsPalindromeSpec.main6) -}
1598f921903f91148265d1cc45efd526
  main50 :: [GHC.Integer.Type.Integer]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Integer.Type.Integer
                   Data.List.IsPalindromeSpec.main59
                   Data.List.IsPalindromeSpec.main51) -}
4aaa44efd09d00dfeb5be0732a553a23
  main51 :: [GHC.Integer.Type.Integer]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Integer.Type.Integer
                   Data.List.IsPalindromeSpec.main60
                   Data.List.IsPalindromeSpec.main52) -}
64a42e2cc8a034fec6de3edeef7fec42
  main52 :: [GHC.Integer.Type.Integer]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Integer.Type.Integer
                   Data.List.IsPalindromeSpec.main59
                   Data.List.IsPalindromeSpec.main53) -}
1b409aa39c3d972e2adda520d50aeeee
  main53 :: [GHC.Integer.Type.Integer]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Integer.Type.Integer
                   Data.List.IsPalindromeSpec.main58
                   Data.List.IsPalindromeSpec.main54) -}
e5c3448000b9bc5dda14a34bcf435a1c
  main54 :: [GHC.Integer.Type.Integer]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Integer.Type.Integer
                   Data.List.IsPalindromeSpec.main57
                   Data.List.IsPalindromeSpec.main55) -}
e5eb3a5978ad6fa9626295e8035101a9
  main55 :: [GHC.Integer.Type.Integer]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Integer.Type.Integer
                   Data.List.IsPalindromeSpec.main56
                   (GHC.Types.[] @ GHC.Integer.Type.Integer)) -}
a1a09a0765d5c17602cb449e31a1691e
  main56 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
a0d50a73d3614dd98142f525e21512cd
  main57 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (2) -}
69c771fa716d72cf2074fabe6bf60f07
  main58 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (4) -}
30c83818bd4a31396cc99e26ab8af776
  main59 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (8) -}
fcd7926a2daf4e229c723bc82b899247
  main6 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Data.List.IsPalindromeSpec.main79
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Data.List.IsPalindromeSpec.main7) -}
7714700e16a909f90512ebb057b5c069
  main60 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (16) -}
a96521f3a15ee55fc357ba44433530f9
  main61 ::
    GHC.Base.String
    -> GHC.Types.Bool -> GHC.Types.Bool -> Test.HUnit.Lang.Assertion
  {- Unfolding: (Test.HUnit.Lang.assertEqual
                   @ GHC.Types.Bool
                   Data.List.IsPalindromeSpec.main62
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   GHC.Classes.$fEqBool
                   GHC.Show.$fShowBool) -}
b4752faf58f04d82a7b721aee87eb465
  main62 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.@=?5
                   Test.HUnit.Base.@?=1
                   Data.List.IsPalindromeSpec.main63) -}
4379da8f12c89f0d8703f633bf448a71
  main63 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.shouldBe5
                   Test.Hspec.Expectations.shouldBe1
                   Data.List.IsPalindromeSpec.main64) -}
48db2b0c57aca5c118d370882301203a
  main64 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Data.List.IsPalindromeSpec.main26
                   Data.List.IsPalindromeSpec.main65
                   GHC.Stack.Types.EmptyCallStack) -}
708dbe84c79f7a3d5b9e283016fee7ec
  main65 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Data.List.IsPalindromeSpec.main25
                   Data.List.IsPalindromeSpec.main24
                   Data.List.IsPalindromeSpec.main23
                   Data.List.IsPalindromeSpec.main67
                   Data.List.IsPalindromeSpec.main21
                   Data.List.IsPalindromeSpec.main67
                   Data.List.IsPalindromeSpec.main66) -}
8217426ccded4ff4b391b334736b4010
  main66 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 56#) -}
528b10cf5772428b8755aa23c869d219
  main67 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 17#) -}
6a8c1aa5ed5c3939d7a1a442ca26310a
  main68 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (case GHC.List.reverse1
                        @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)
                        Data.List.IsPalindromeSpec.main69
                        (GHC.Types.[]
                           @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)) of wild {
                   [] -> GHC.Base.Nothing @ Test.Hspec.Core.Example.Location
                   : ds ds1
                   -> case ds of wild2 { (,) ds2 loc ->
                      GHC.Base.Just
                        @ Test.Hspec.Core.Example.Location
                        (Test.Hspec.Core.Example.Location
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds3 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds6 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds7 })
                           Test.Hspec.Core.Example.ExactLocation) } }) -}
c12e2c4c5037102a477262761b9e2ac9
  main69 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (Data.CallStack.$wunsafeDrop
                   @ ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                   1#
                   Data.List.IsPalindromeSpec.main70) -}
1459b2f5bed8e388145f3379f5dacb43
  main7 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Data.List.IsPalindromeSpec.main41
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Data.List.IsPalindromeSpec.main8
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R) -}
20e84578bf454e6ee29cc93618866ef0
  main70 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (GHC.Stack.Types.getCallStack
                   Data.List.IsPalindromeSpec.main71) -}
6db88cc956e9c76446c7ebd1050e8035
  main71 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem9
                   Test.Hspec.Core.Tree.specItem2
                   Data.List.IsPalindromeSpec.main72) -}
4285bdc4376aeaab7f80a1ecf37b515e
  main72 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Data.List.IsPalindromeSpec.main73) -}
919a32c27555b97f25260601e326cfcb
  main73 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Data.List.IsPalindromeSpec.main37
                   Data.List.IsPalindromeSpec.main74
                   GHC.Stack.Types.EmptyCallStack) -}
e32059134f149dccd9a1e7f7a465face
  main74 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Data.List.IsPalindromeSpec.main25
                   Data.List.IsPalindromeSpec.main24
                   Data.List.IsPalindromeSpec.main23
                   Data.List.IsPalindromeSpec.main76
                   Data.List.IsPalindromeSpec.main35
                   Data.List.IsPalindromeSpec.main76
                   Data.List.IsPalindromeSpec.main75) -}
756ba712448d56324e1f46b90a6fcf96
  main75 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 54#) -}
c512af9ec8c1f5d962072c2806e87e08
  main76 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 16#) -}
a45f51597899ce7717a6d056994f5fbf
  main77 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Data.List.IsPalindromeSpec.main40
                   Data.List.IsPalindromeSpec.main78) -}
a7e780da527838fd6f902da7c5080ed3
  main78 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "hould know if a list of ints is a palidrome"#) -}
fa355d2376aa85992c98be7cf0f9e7b0
  main79 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Data.List.IsPalindromeSpec.main80
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
4cf3d4fe47d58d00deb22adb4115af86
  main8 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Data.List.IsPalindromeSpec.main9
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
8ed5d2e4d3bef3d481fc3d2a2583d484
  main80 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Data.List.IsPalindromeSpec.main81) -}
a5d96429f20ae13c6f4ed516d5652d7e
  main81 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Data.List.IsPalindromeSpec.main105
                   Data.List.IsPalindromeSpec.main96
                   GHC.Types.False
                   Data.List.IsPalindromeSpec.main82
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
a9bdc468e74d6fb14ed6f21b405647b3
  main82 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Trans
                                    (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                    (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Data.List.IsPalindromeSpec.main83) -}
cf6e389fa40ffc06c32fed28c06a219e
  main83 :: Test.HUnit.Lang.Assertion
  {- Unfolding: (Data.List.IsPalindromeSpec.main89
                   (GHC.Types.[] @ GHC.Types.Char)
                   GHC.Types.False
                   Data.List.IsPalindromeSpec.main84) -}
7d37a7cd792d47213f7adf572012b11f
  main84 :: GHC.Types.Bool
  {- Unfolding: (Data.List.IsPalindrome.isPalindrome
                   @ GHC.Integer.Type.Integer
                   GHC.Integer.Type.$fEqInteger
                   Data.List.IsPalindromeSpec.main85) -}
b80c3a3e2945dc2259ba4c2c73692f5c
  main85 :: [GHC.Integer.Type.Integer]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Integer.Type.Integer
                   Data.List.IsPalindromeSpec.main56
                   Data.List.IsPalindromeSpec.main86) -}
b937ff5704cbd986883d5bb6cae7799a
  main86 :: [GHC.Integer.Type.Integer]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Integer.Type.Integer
                   Data.List.IsPalindromeSpec.main57
                   Data.List.IsPalindromeSpec.main87) -}
5f62ff60f88ef81ab8d36d25f1c5a5d2
  main87 :: [GHC.Integer.Type.Integer]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Integer.Type.Integer
                   Data.List.IsPalindromeSpec.main88
                   (GHC.Types.[] @ GHC.Integer.Type.Integer)) -}
60b4d28ba0f3f5556446213791761eb1
  main88 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (3) -}
2358ce7dc5a976316feace2a80eba440
  main89 ::
    GHC.Base.String
    -> GHC.Types.Bool -> GHC.Types.Bool -> Test.HUnit.Lang.Assertion
  {- Unfolding: (Test.HUnit.Lang.assertEqual
                   @ GHC.Types.Bool
                   Data.List.IsPalindromeSpec.main90
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   GHC.Classes.$fEqBool
                   GHC.Show.$fShowBool) -}
78cee325000f269747cf8f112c57f5b2
  main9 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Data.List.IsPalindromeSpec.main10) -}
333fa43774979cfc954e2f4b79676526
  main90 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.@=?5
                   Test.HUnit.Base.@?=1
                   Data.List.IsPalindromeSpec.main91) -}
9af4256e9d2579bb2881df33446dbd1f
  main91 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.shouldBe5
                   Test.Hspec.Expectations.shouldBe1
                   Data.List.IsPalindromeSpec.main92) -}
a5992b773dbd30524f8086c0ba48c8ae
  main92 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Data.List.IsPalindromeSpec.main26
                   Data.List.IsPalindromeSpec.main93
                   GHC.Stack.Types.EmptyCallStack) -}
3c11344f98cf1fe2cd4f2ba83c4b124b
  main93 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Data.List.IsPalindromeSpec.main25
                   Data.List.IsPalindromeSpec.main24
                   Data.List.IsPalindromeSpec.main23
                   Data.List.IsPalindromeSpec.main95
                   Data.List.IsPalindromeSpec.main21
                   Data.List.IsPalindromeSpec.main95
                   Data.List.IsPalindromeSpec.main94) -}
5ba4aa2025ed8f562cd6ae7c2b0a905a
  main94 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 44#) -}
bddc48594b994153cfd28f233a049503
  main95 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 15#) -}
fa5367817de4485b3c24a335de568b68
  main96 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (case GHC.List.reverse1
                        @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)
                        Data.List.IsPalindromeSpec.main97
                        (GHC.Types.[]
                           @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)) of wild {
                   [] -> GHC.Base.Nothing @ Test.Hspec.Core.Example.Location
                   : ds ds1
                   -> case ds of wild2 { (,) ds2 loc ->
                      GHC.Base.Just
                        @ Test.Hspec.Core.Example.Location
                        (Test.Hspec.Core.Example.Location
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds3 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds6 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds7 })
                           Test.Hspec.Core.Example.ExactLocation) } }) -}
d3682b60f769187b731b0f3d4d3e002a
  main97 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (Data.CallStack.$wunsafeDrop
                   @ ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                   1#
                   Data.List.IsPalindromeSpec.main98) -}
9199a7e234930ebbcb8b64ac53bd6ad4
  main98 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (GHC.Stack.Types.getCallStack
                   Data.List.IsPalindromeSpec.main99) -}
36f48e9c304885661534cc379ca52789
  main99 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem9
                   Test.Hspec.Core.Tree.specItem2
                   Data.List.IsPalindromeSpec.main100) -}
8c0045a9856c482c540ce64e815f25cf
  spec :: Test.Hspec.Core.Spec.Monad.Spec
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Data.List.IsPalindromeSpec.main2
                  `cast`
                (Trans
                     (Sym (GHC.Types.N:IO[0]
                               <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                     (Trans
                          (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                    <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N))
                          (Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0] <()>_N) <()>_N))) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

